#!/usr/bin/env bash

# LeetCode Helper
#
# lt -l: show the current language
# lt -l <LANG>: set language to <LANG>
# lt: create a file ~/oj/leetcode-<LANG>/<QUESTION_TITLE>.<LANG> with the
# template set below, and open it via nvim. We need to copy the problem title
# from the problem page in leetcode.com.

leetcode_lang_temp=$HOME/.local/share/leetcode_lang
[[ ! -e leetcode_lang_temp ]] && touch $leetcode_lang_temp

case "$1" in
  -l)
    if [[ -z $2 ]]; then
      cat $leetcode_lang_temp
    else
      echo $2 > $leetcode_lang_temp
    fi
    exit 0
    ;;
esac

language=$(cat $leetcode_lang_temp)
[[ -z $language ]] && echo "ERROR: no language is set!" && exit 1

path=$HOME/oj/leetcode-$language
[[ -d $path ]] || mkdir $path

problem_url=$(osascript <<EOD
tell application "Arc"
  set currentURL to URL of active tab of window 1
  return currentURL
end tell
EOD)

problem_name=$(echo $(pbpaste | sed "s/\.//g; s/ /-/g") | tr "[:upper:]" "[:lower:]")
file_name=$problem_name.$language
file=$path/$file_name

if [[ -e $file ]]; then
  echo "The file $file already exists!"
  exit 1
else
  touch $file
fi

# Template for each language
if [[ $language == "cpp" ]]; then
  cat >> $file <<EOD
// $problem_url

#include <cstring>
#include <iostream>
#include <fstream>
#include <sstream>
#include <array>
#include <string>
#include <vector>
#include <deque>
#include <list>
#include <forward_list>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <stack>
#include <queue>
#include <algorithm>
#include <numeric>
#include <functional>
#include <random>
#include <memory>
#include <iterator>

using namespace std;
using namespace std::placeholders;

/*
 * Idea:
 *
 * Time:
 *
 * Space:
 */
class Solution {
public:
};

int main() {
  return 0;
}
EOD
  nvim +32 $file
else
  nvim $file
fi
